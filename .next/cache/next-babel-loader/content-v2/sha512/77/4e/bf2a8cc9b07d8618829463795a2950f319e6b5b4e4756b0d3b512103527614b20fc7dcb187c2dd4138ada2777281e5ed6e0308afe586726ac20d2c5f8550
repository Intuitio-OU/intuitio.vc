{"ast":null,"code":"var _jsxFileName = \"F:\\\\OneDrive\\\\git\\\\intuitio_vc\\\\intuitio.vc\\\\component\\\\counterup.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport CountUp from \"react-countup\";\nimport VisibilitySensor from \"react-visibility-sensor\";\n\nfunction Counterup(_ref) {\n  var _this = this;\n\n  var count = _ref.count;\n  return __jsx(React.Fragment, null, __jsx(CountUp, {\n    end: count,\n    redraw: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 13\n    }\n  }, function (_ref2) {\n    var countUpRef = _ref2.countUpRef,\n        start = _ref2.start;\n    return __jsx(VisibilitySensor, {\n      onChange: start,\n      delayedCall: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 21\n      }\n    }, __jsx(\"span\", {\n      ref: countUpRef,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 25\n      }\n    }, \"count\"));\n  }));\n}\n\n_c = Counterup;\nexport default Counterup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Counterup\");","map":{"version":3,"sources":["F:/OneDrive/git/intuitio_vc/intuitio.vc/component/counterup.js"],"names":["CountUp","VisibilitySensor","Counterup","count","countUpRef","start"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,eAApB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;;AAEA,SAASC,SAAT,OAA8B;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;AAC1B,SACI,4BACI,MAAC,OAAD;AAAS,IAAA,GAAG,EAAEA,KAAd;AAAqB,IAAA,MAAM,EAAE,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACK;AAAA,QAAGC,UAAH,SAAGA,UAAH;AAAA,QAAeC,KAAf,SAAeA,KAAf;AAAA,WACG,MAAC,gBAAD;AAAkB,MAAA,QAAQ,EAAEA,KAA5B;AAAmC,MAAA,WAAW,MAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAM,MAAA,GAAG,EAAED,UAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADH;AAAA,GADL,CADJ,CADJ;AAWH;;KAZQF,S;AAcT,eAAeA,SAAf","sourcesContent":["import CountUp from \"react-countup\";\nimport VisibilitySensor from \"react-visibility-sensor\";\n\nfunction Counterup({ count }) {\n    return (\n        <>\n            <CountUp end={count} redraw={true}>\n                {({ countUpRef, start }) => (\n                    <VisibilitySensor onChange={start} delayedCall>\n                        <span ref={countUpRef}>count</span>\n                    </VisibilitySensor>\n                )}\n            </CountUp>\n        </>\n    );\n}\n\nexport default Counterup;\n"]},"metadata":{},"sourceType":"module"}